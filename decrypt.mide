ADDI IC, R0, 131072 \\ Encrypted image counter
ADDI IP, IC, 307200 \\ Encrypted image pointer
ADDI VP, R0, 14703615 \\ VRAM pointer
ADDI R1, R0, 480 \\ Image Width
ADDI R2, R0, 0 \\ Current X pixel
ADDI R3, R0, 1440 \\ Monitor Width - Image Width

%COPY:
VLDW V1, IC
VSTW V1, R0
ADDI IC, IC, 256
ADDI VP, VP, 256
ADDI R2, R2, 8
BE R1, R2, NEXTLINE
JMP COPY

%NEXTLINE:
ADDI R2, R0, 0 \\ Reset X pixel
BE IC, IP, DECRYPT
ADD VP, VP, R3
JMP COPY

%DECRYPT:
ADDI IC, R0, 131072 \\ Reset image counter
ADDI VP, R0, 14703615 \\ Reset VRAM pointer
ADDI R4, R0,  3763 \\ n
ADDI R5, R0, 23 \\ k
ADDI R6, R0, 2229 \\ m
ADDI R7, R0, 1441 \\ d

%DECRYPT_ARRAY:
VLDH V1, IC
CALL POWER
VSTB V5, VP
ADDI IC, IC, 128
ADDI VP, VP, 64
ADDI R2, R2, 8
BE R1, R2, NEXTLINE2
JMP DECRYPT_ARRAY

%NEXTLINE2:
ADDI R2, R0, 0 \\ Reset X pixel
BE IC, IP, EXIT
ADD VP, VP, R3
JMP DECRYPT_ARRAY

\\ Receives V1, R3, R7 and returns V2, uses R9
%POWER:
SUBI SP, SP, 4
STW RA, SP
SUBI SP, SP, 4
STW R1, SP
SUBI SP, SP, 4
STW R2, SP
ADD R9, R7, R0 \\ MOV
VSUB V3, V1, R0 \\ MOV
CALL MODULO
VSUB V1, V3, R0 \\ MOV
ADDI R1, R0, 1
VSUB V2, R1, R0 \\ Result = 1
ADDI R1, R0, 31

%WHILE:
BE R9, R0, RETURN
SL R2, R9, R1
BE R2, R0, ENDIF
VMUL V2, V2, V1
VSUB V3, V2, R0 \\ MOV
CALL MODULO
VSUB V2, V3, R0 \\ MOV

%ENDIF:
SR R9, R9, 1
VMUL V1, V1, V1
VSUB V3, V1, R0 \\ MOV
CALL MODULO
VSUB V1, V3, R0 \\ MOV
JMP WHILE

%RETURN:
LDW R2, SP
ADDI SP, SP, 4
LDW R1, SP
ADDI SP, SP, 4
LDW RA, SP
ADDI SP, SP, 4
JMP RA


\\ Receives V3, R4 and returns on V3, uses V4 and V5
%MODULO:
VMUL V4, V3, R6
VSR V4, V4, R5
VMUL V5, V4, R4
VSUB V3, V3, V5
VCSUB V3, V3, R4
JMP RA

%EXIT:
