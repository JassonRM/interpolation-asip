ADDI SP, R0, 1024;
ADDI IC, R0, 3 ; Encrypted image counter
ADDI R1, R0, 16
SL IC, IC, R1
ADDI IP, R0, 75 ; Encrypted image pointer
ADDI R1, R0, 12
SL IP, IP, R1
ADD IP, IC, IP
ADDI VP, R0, 1028 ; VRAM pointer
ADDI R4, R0,  3763 ; n
ADDI R5, R0, 7 ; k - 16
ADDI R6, R0, 2229 ; m
ADDI R7, R0, 1441 ; d

%DECRYPT:
VLDH V1, IC
CALL POWER
VSTB V2, VP
ADDI IC, IC, 16
ADDI VP, VP, 8
BE IC, IP, EXIT
JMP DECRYPT

; Receives V1, R7 and returns V2, uses R9
%POWER:
SUBI SP, SP, 4
STW RA, SP
ADD R9, R7, R0 ; MOV
VSUB V3, V1, R0 ; MOV
CALL MODULO
VSUB V1, V3, R0
ADDI R1, R0, 1
VSUB V2, R1, R0 ; Result = 1

%WHILE:
BE R9, R0, RETURN
ADDI R1, R0, 1
AND R2, R9, R1
BE R2, R0, ENDIF
VMUL V2, V2, V1
VSUB V3, V2, R0 ; MOV
CALL MODULO
VSUB V2, V3, R0 ; MOV

%ENDIF:
ADDI R3, R0, 1
SR R9, R9, R3
VMUL V1, V1, V1
VSUB V3, V1, R0 ; MOV
CALL MODULO
VSUB V1, V3, R0 ; MOV
JMP WHILE

%RETURN:
LDW RA, SP
ADDI SP, SP, 4
JR RA

; Receives V3, R4 and returns on V3, uses V4 and V5
%MODULO:
VMUL V4, V3, R6
ADDI R8, R0, 16
VSR V6, V3, R8
VMUL V6, V6, R6
VSR V4, V4, R8
VADD V4, V4, V6
VSR V4, V4, R5
VMUL V5, V4, R4
VSUB V3, V3, V5
VCSUB V3, V3, R4
JR RA

%EXIT:
ADD R0, R0, R0
